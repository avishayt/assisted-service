// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// DeleteImageNoContentCode is the HTTP code returned for type DeleteImageNoContent
const DeleteImageNoContentCode int = 204

/*DeleteImageNoContent Success.

swagger:response deleteImageNoContent
*/
type DeleteImageNoContent struct {
}

// NewDeleteImageNoContent creates DeleteImageNoContent with default headers values
func NewDeleteImageNoContent() *DeleteImageNoContent {

	return &DeleteImageNoContent{}
}

// WriteResponse to the client
func (o *DeleteImageNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteImageUnauthorizedCode is the HTTP code returned for type DeleteImageUnauthorized
const DeleteImageUnauthorizedCode int = 401

/*DeleteImageUnauthorized Unauthorized.

swagger:response deleteImageUnauthorized
*/
type DeleteImageUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewDeleteImageUnauthorized creates DeleteImageUnauthorized with default headers values
func NewDeleteImageUnauthorized() *DeleteImageUnauthorized {

	return &DeleteImageUnauthorized{}
}

// WithPayload adds the payload to the delete image unauthorized response
func (o *DeleteImageUnauthorized) WithPayload(payload *models.InfraError) *DeleteImageUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete image unauthorized response
func (o *DeleteImageUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteImageUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteImageForbiddenCode is the HTTP code returned for type DeleteImageForbidden
const DeleteImageForbiddenCode int = 403

/*DeleteImageForbidden Forbidden.

swagger:response deleteImageForbidden
*/
type DeleteImageForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewDeleteImageForbidden creates DeleteImageForbidden with default headers values
func NewDeleteImageForbidden() *DeleteImageForbidden {

	return &DeleteImageForbidden{}
}

// WithPayload adds the payload to the delete image forbidden response
func (o *DeleteImageForbidden) WithPayload(payload *models.InfraError) *DeleteImageForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete image forbidden response
func (o *DeleteImageForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteImageForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteImageNotFoundCode is the HTTP code returned for type DeleteImageNotFound
const DeleteImageNotFoundCode int = 404

/*DeleteImageNotFound Error.

swagger:response deleteImageNotFound
*/
type DeleteImageNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteImageNotFound creates DeleteImageNotFound with default headers values
func NewDeleteImageNotFound() *DeleteImageNotFound {

	return &DeleteImageNotFound{}
}

// WithPayload adds the payload to the delete image not found response
func (o *DeleteImageNotFound) WithPayload(payload *models.Error) *DeleteImageNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete image not found response
func (o *DeleteImageNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteImageNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteImageMethodNotAllowedCode is the HTTP code returned for type DeleteImageMethodNotAllowed
const DeleteImageMethodNotAllowedCode int = 405

/*DeleteImageMethodNotAllowed Method Not Allowed.

swagger:response deleteImageMethodNotAllowed
*/
type DeleteImageMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteImageMethodNotAllowed creates DeleteImageMethodNotAllowed with default headers values
func NewDeleteImageMethodNotAllowed() *DeleteImageMethodNotAllowed {

	return &DeleteImageMethodNotAllowed{}
}

// WithPayload adds the payload to the delete image method not allowed response
func (o *DeleteImageMethodNotAllowed) WithPayload(payload *models.Error) *DeleteImageMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete image method not allowed response
func (o *DeleteImageMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteImageMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteImageConflictCode is the HTTP code returned for type DeleteImageConflict
const DeleteImageConflictCode int = 409

/*DeleteImageConflict Error.

swagger:response deleteImageConflict
*/
type DeleteImageConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteImageConflict creates DeleteImageConflict with default headers values
func NewDeleteImageConflict() *DeleteImageConflict {

	return &DeleteImageConflict{}
}

// WithPayload adds the payload to the delete image conflict response
func (o *DeleteImageConflict) WithPayload(payload *models.Error) *DeleteImageConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete image conflict response
func (o *DeleteImageConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteImageConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteImageInternalServerErrorCode is the HTTP code returned for type DeleteImageInternalServerError
const DeleteImageInternalServerErrorCode int = 500

/*DeleteImageInternalServerError Error.

swagger:response deleteImageInternalServerError
*/
type DeleteImageInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteImageInternalServerError creates DeleteImageInternalServerError with default headers values
func NewDeleteImageInternalServerError() *DeleteImageInternalServerError {

	return &DeleteImageInternalServerError{}
}

// WithPayload adds the payload to the delete image internal server error response
func (o *DeleteImageInternalServerError) WithPayload(payload *models.Error) *DeleteImageInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete image internal server error response
func (o *DeleteImageInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteImageInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteImageServiceUnavailableCode is the HTTP code returned for type DeleteImageServiceUnavailable
const DeleteImageServiceUnavailableCode int = 503

/*DeleteImageServiceUnavailable Unavailable.

swagger:response deleteImageServiceUnavailable
*/
type DeleteImageServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteImageServiceUnavailable creates DeleteImageServiceUnavailable with default headers values
func NewDeleteImageServiceUnavailable() *DeleteImageServiceUnavailable {

	return &DeleteImageServiceUnavailable{}
}

// WithPayload adds the payload to the delete image service unavailable response
func (o *DeleteImageServiceUnavailable) WithPayload(payload *models.Error) *DeleteImageServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete image service unavailable response
func (o *DeleteImageServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteImageServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
